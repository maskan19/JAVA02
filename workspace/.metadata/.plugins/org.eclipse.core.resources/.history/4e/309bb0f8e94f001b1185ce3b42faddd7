package kr.or.ddit.basic;

import java.util.HashSet;

public class SetText {

	public static void main(String[] args) {

		/*
		 * - List와 Set의 차이
		 * 1. List
		 * - 데이터의 순서(index)가 있다.
		 * - 중복되는 데이터를 저장할 수 있다.
		 * 2. Set
		 * - 데이터의 순서(index)가 없다.
		 * - 중복되는 데이터를 저장할 수 없다.
		 * 
		 * 
		 */
		
		HashSet hs1 = new HashSet();
		
//		Set에 데이터를 주가할 떄도 add()메서드를 사용한다.
//		add()메서드는 데이터 추가에 성공시 true, 실패시 false를 반환한다.
		hs1.add("AA");
		hs1.add("BB");
		hs1.add("CC");
		hs1.add(1);
		hs1.add("DD");
		hs1.add("EE");
		hs1.add(3);
		hs1.add(5);
		
		System.out.println("Set의 개수 : " + hs1.size()); //8
		System.out.println("Set데이터 : " + hs1); //[1, AA, 3, BB, 5, CC, DD, EE]
		
//		Set에 데이터를 추가할 때 중복되면 false를 반환하고
//		데이터 추가에 실패한다.
		boolean isAdd = hs1.add("FF");
		System.out.println("중복되지 않을 때 : " + isAdd); // true
		isAdd = hs1.add("AA");
		System.out.println("중복될 때 : " + isAdd); //false
		System.out.println("Set데이터 : " + hs1); //[1, AA, 3, BB, 5, CC, DD, EE]
		
//		자료 삭제 메서드 remove(삭제할 데이터) 의 반환값 : 삭제 성공(true), 삭제 실패 (false)
//		자료 전체 삭제 메서드 clear() 
		
//		"FF"데이터를 "EE"로 변경하기
		
		hs1.remove("FF");
		hs1.add("EE");
		
		
		
		
		
		
		
		
		
		
		
		
		

	}

}
